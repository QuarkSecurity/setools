AN OVERVIEW OF TYPES RELATIONSHIP SUMMARY ANALYSIS
apol, version 1.6
February 09, 2005
selinux@tresys.com

UNDERSTANDING TYPES RELATIONSHIP SUMMARY ANALYSIS

Apol allows one to analyze an SELinux policy in order to understand the relation-
ship between two specific types that are defined in the policy. Policy developers 
may want to know if there exists any relationship (or interactions) between 
Type A and Type B and exactly what makes up that relationship (i.e., what rules, 
permissions, attributes, roles, etc. exist that cause or allow interactions 
between the two types). Or they may want to determine whether a particular 
type is completely isolated from another. This analysis can also be used as a 
stepping stone to analyzing dependencies within a policy. 

In view of the foregoing, the following use cases have been devised, however, 
they in no way, represent all possible uses or scenarios in which this sort of 
analysis may be used:

Case 1
The user may want a quick way to determine whether a particular type is dependent 
upon another type in some manner. In particular, he may want to know whether a 
domain type needs some particular access to another type in order to process 
successfully? For example, what happens if a particular SELinux package labeled
with Type A was removed from the system? Will an application labeled with Type B
be affected by the removal of all instances of this type? 

Case 2
The user may want to determine whether both types are assigned to a common 
attribute or a common role. What users have access to this attribute and under 
what roles and should this be the case?

Case 3
The user may want to determine whether both types have common access to any
object type(s).  What aspects make them similar (e.g. do they both write to 
user_home_dir_t)? What access makes them unique, thus needing a separate type 
defined? 

Case 4
The user may want to know how the types, particularly domains, interact with each 
other (e.g. through process signaling or through a more complex interprocess 
communication (IPC) mechanism). Do the two types share any data and if so, how 
does information move from one domain to the other, directly and indirectly?


USING THE TYPES RELATIONSHIP SUMMARY ANALYSIS INTERFACE IN APOL

The interface in apol presents the user with comboboxes for selecting the two 
types to be analyzed. They are labeled 'Type A' and 'Type B' respectively. 
Additionally, there are comboboxes below each in order to allow the user to 
create a smaller subset of types from which to choose for Type A and Type B.
Two subtabs, labeled 'Basic' and 'Analysis', are provided in the interface for
selecting the analyses to include in the summary. 

The 'Basic' tab contains options for determining the common attributes, roles 
and users that exist between Type A and Type B. Common users consist of users 
defined in the policy which have access to both Type A and Type B through a 
common role. This tab also provides options for determining common, as well 
as dissimilar, access to object types. So for example, if Type A and Type B 
are allowed some sort of access to 'user_home_dir_t', then the object type and  
the rule proof will appear within the results. And finally, the 'Basic' tab 
provides an option for searching for all allow rules that permit access between 
the two, as well an option for searching for all type transition/change rules 
between the two. 

The 'Analysis' tab contains options for performing additional analysis bwtween
the two types using the existing analysis modules in apol, namely, the Domain 
Transition, Direct and Transitive Information Flow analyses. These options are
provided more as a convenience to the user for including these analyses within
the summary. You will notice a limitation here in that the Direct Information 
Flow option is a two-way analysis (i.e. from A<->B), whereas the Transitive 
Information Flow and Domain Transition options are one-way (i.e. A->B and B->A)
analyses. So for example, if one needs to determine if any domain transitions 
exist between Type A and Type B, he or she would need to select both Domain 
Transition checkbuttons to perform the analysis. 

After selecting the desired options for the analysis, select 'New' or 'Update'
to start the analysis. This analysis may contain an overwhelming amount of 
information, so the results are simplified by listing each option selected as
an element of a tree widget. This allows the user to select an option from the 
tree and have more specific results displayed within the textbox.

UNDERSTANDING THE RESULTS OF A TYPES RELATIONSHIP SUMMARY ANALYSIS

Basically, the results consist of a summary of output from all of the analysis 
modules and other queries provided in apol using the two specified types as 
input. A more experienced apol user, should be able to perform the analyses 
on his or her own, However, this module is available to provide a convenient 
and efficient way to summarize the relationship between two types. The results
are represented by a tree whereby the user may select an item from the tree
in order to display a subset of the results. The results of this analysis 
consist of:

	- the attribute(s) to which both types are assigned (common attribs) 
	- the role(s) which have access to both TypeA and TypeB (common roles) 
	- the users which have access to both TypeA and TypeB through a common
	  role. (common users) 
	- all type transition/change rules from TypeA to TypeB or vice versa
	- all allow rules that provide access between TypeA and TypeB 
	  (e.g., allow rules that allow TypeA and TypeB to send signals to each other)
	- types to which both TypeA and TypeB have common access. These will be
	  rendered as a subtree within the main results tree widget.
	- types to which TypeA and TypeB have dissimilar access. These will be
	  rendered as a subtree within the main results tree widget.
	- any direct information flows between TypeA and TypeB
	- any transitive information flows between TypeA and TypeB
	- any domain transitions from TypeA to TypeB or vice versa 
	 
    
	
                                                