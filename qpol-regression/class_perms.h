#ifndef CLASS_PERMS_H
#define CLASS_PERMS_H
#define MLS_TEST_NUM_CLASSES 55
#define MAX_ARR_LEN 100
#define MLS_TEST_NUM_CLASSES_W_PERM_CREAT 6
#define MLS_TEST_NUM_COMMONS 3
char * mls_test_all_classes[] = {
	"rawip_socket",
	"file",
	"font",
	"msgq",
	"xserver",
	"xextension",
	"nscd",
	"xinput",
	"netlink_socket",
	"property",
	"netlink_route_socket",
	"tcp_socket",
	"dbus",
	"process",
	"capability",
	"lnk_file",
	"chr_file",
	"socket",
	"netlink_tcpdiag_socket",
	"netlink_xfrm_socket",
	"sem",
	"security",
	"sock_file",
	"cursor",
	"system",
	"blk_file",
	"window",
	"netlink_audit_socket",
	"fifo_file",
	"unix_dgram_socket",
	"node",
	"dir",
	"netlink_ip6fw_socket",
	"packet_socket",
	"drawable",
	"netlink_firewall_socket",
	"association",
	"gc",
	"fd",
	"netif",
	"netlink_selinux_socket",
	"colormap",
	"key_socket",
	"msg",
	"unix_stream_socket",
	"ipc",
	"pax",
	"shm",
	"xclient",
	"passwd",
	"netlink_kobject_uevent_socket",
	"filesystem",
	"udp_socket",
	"netlink_dnrt_socket",
	"netlink_nflog_socket"
};
char * mls_test_class_w_perm[] = {
	"property",
	"cursor",
	"window",
	"drawable",
	"gc",
	"colormap"
};
/* class names with perms lists */
struct class_perm_list{
	int len_perm;
	char *class_name;
	char * perm_list[MAX_ARR_LEN];
}mls_test_all_classes_and_perms[] = 
{
	{
		2,
		"rawip_socket",
		{"node_bind","socket"}
	},
	{
		4,
		"file",
		{"execute_no_trans","entrypoint","execmod","file"}
	},
	{
		4,
		"font",
		{"load","free","getattr","use"}
	},
	{
		2,
		"msgq",
		{"enqueue","ipc"}
	},
	{
		8,
		"xserver",
		{"screensaver","gethostlist","sethostlist","getfontpath","setfontpath","getattr","grab","ungrab"}
	},
	{
		2,
		"xextension",
		{"query","use"}
	},
	{
		8,
		"nscd",
		{"getpwd","getgrp","gethost","getstat","admin","shmempwd","shmemgrp","shmemhost"}
	},
	{
		11,
		"xinput",
		{"lookup","getattr","setattr","setfocus","warppointer","activegrab","passivegrab","ungrab","bell","mousemotion","relabelinput"}
	},
	{
		1,
		"netlink_socket",
		{"socket"}
	},
	{
		4,
		"property",
		{"create","free","read","write"}
	},
	{
		3,
		"netlink_route_socket",
		{"nlmsg_read","nlmsg_write","socket"}
	},
	{
		6,
		"tcp_socket",
		{"connectto","newconn","acceptfrom","node_bind","name_connect","socket"}
	},
	{
		2,
		"dbus",
		{"acquire_svc","send_msg"}
	},
	{
		28,
		"process",
		{"fork","transition","sigchld","sigkill","sigstop","signull","signal","ptrace","getsched","setsched","getsession","getpgid","setpgid","getcap","setcap","share","getattr","setexec","setfscreate","noatsecure","siginh","setrlimit","rlimitinh","dyntransition","setcurrent","execmem","execstack","execheap"}
	},
	{
		31,
		"capability",
		{"chown","dac_override","dac_read_search","fowner","fsetid","kill","setgid","setuid","setpcap","linux_immutable","net_bind_service","net_broadcast","net_admin","net_raw","ipc_lock","ipc_owner","sys_module","sys_rawio","sys_chroot","sys_ptrace","sys_pacct","sys_admin","sys_boot","sys_nice","sys_resource","sys_time","sys_tty_config","mknod","lease","audit_write","audit_control"}
	},
	{
		1,
		"lnk_file",
		{"file"}
	},
	{
		4,
		"chr_file",
		{"execute_no_trans","entrypoint","execmod","file"}
	},
	{
		1,
		"socket",
		{"socket"}
	},
	{
		3,
		"netlink_tcpdiag_socket",
		{"nlmsg_read","nlmsg_write","socket"}
	},
	{
		3,
		"netlink_xfrm_socket",
		{"nlmsg_read","nlmsg_write","socket"}
	},
	{
		1,
		"sem",
		{"ipc"}
	},
	{
		11,
		"security",
		{"compute_av","compute_create","compute_member","check_context","load_policy","compute_relabel","compute_user","setenforce","setbool","setsecparam","setcheckreqprot"}
	},
	{
		1,
		"sock_file",
		{"file"}
	},
	{
		5,
		"cursor",
		{"create","createglyph","free","assign","setattr"}
	},
	{
		4,
		"system",
		{"ipc_info","syslog_read","syslog_mod","syslog_console"}
	},
	{
		1,
		"blk_file",
		{"file"}
	},
	{
		26,
		"window",
		{"addchild","create","destroy","map","unmap","chstack","chproplist","chprop","listprop","getattr","setattr","setfocus","move","chselection","chparent","ctrllife","enumerate","transparent","mousemotion","clientcomevent","inputevent","drawevent","windowchangeevent","windowchangerequest","serverchangeevent","extensionevent"}
	},
	{
		5,
		"netlink_audit_socket",
		{"nlmsg_read","nlmsg_write","nlmsg_relay","nlmsg_readpriv","socket"}
	},
	{
		1,
		"fifo_file",
		{"file"}
	},
	{
		1,
		"unix_dgram_socket",
		{"socket"}
	},
	{
		7,
		"node",
		{"tcp_recv","tcp_send","udp_recv","udp_send","rawip_recv","rawip_send","enforce_dest"}
	},
	{
		6,
		"dir",
		{"add_name","remove_name","reparent","search","rmdir","file"}
	},
	{
		3,
		"netlink_ip6fw_socket",
		{"nlmsg_read","nlmsg_write","socket"}
	},
	{
		1,
		"packet_socket",
		{"socket"}
	},
	{
		5,
		"drawable",
		{"create","destroy","draw","copy","getattr"}
	},
	{
		3,
		"netlink_firewall_socket",
		{"nlmsg_read","nlmsg_write","socket"}
	},
	{
		2,
		"association",
		{"sendto","recvfrom"}
	},
	{
		4,
		"gc",
		{"create","free","getattr","setattr"}
	},
	{
		1,
		"fd",
		{"use"}
	},
	{
		6,
		"netif",
		{"tcp_recv","tcp_send","udp_recv","udp_send","rawip_recv","rawip_send"}
	},
	{
		1,
		"netlink_selinux_socket",
		{"socket"}
	},
	{
		9,
		"colormap",
		{"create","free","install","uninstall","list","read","store","getattr","setattr"}
	},
	{
		1,
		"key_socket",
		{"socket"}
	},
	{
		2,
		"msg",
		{"send","receive"}
	},
	{
		4,
		"unix_stream_socket",
		{"connectto","newconn","acceptfrom","socket"}
	},
	{
		1,
		"ipc",
		{"ipc"}
	},
	{
		6,
		"pax",
		{"pageexec","emutramp","mprotect","randmmap","randexec","segmexec"}
	},
	{
		2,
		"shm",
		{"lock","ipc"}
	},
	{
		1,
		"xclient",
		{"kill"}
	},
	{
		5,
		"passwd",
		{"passwd","chfn","chsh","rootok","crontab"}
	},
	{
		1,
		"netlink_kobject_uevent_socket",
		{"socket"}
	},
	{
		10,
		"filesystem",
		{"mount","remount","unmount","getattr","relabelfrom","relabelto","transition","associate","quotamod","quotaget"}
	},
	{
		2,
		"udp_socket",
		{"node_bind","socket"}
	},
	{
		1,
		"netlink_dnrt_socket",
		{"socket"}
	},
	{
		1,
		"netlink_nflog_socket",
		{"socket"}
	}
};
char * mls_test_classes_w_perm_create[] = {
	"property",
	"cursor",
	"window",
	"drawable",
	"gc",
	"colormap"
};
struct common_perm_list{
	int len_perm;
	char *common_name;
	char * perm_list[MAX_ARR_LEN];
} mls_test_all_commons[] = {
	{
		22,
		"socket",
		{
			"append",
			"bind",
			"connect",
			"create",
			"write",
			"relabelfrom",
			"ioctl",
			"name_bind",
			"sendto",
			"recv_msg",
			"send_msg",
			"getattr",
			"setattr",
			"accept",
			"getopt",
			"read",
			"setopt",
			"shutdown",
			"recvfrom",
			"lock",
			"relabelto",
			"listen"
		}
	},
	{
		17,	
		"file",
		{
			"append",
			"create",
			"execute",
			"write",
			"relabelfrom",
			"link",
			"unlink",
			"ioctl",
			"getattr",
			"setattr",
			"read",
			"rename",
			"lock",
			"relabelto",
			"mounton",
			"quotaon",
			"swapon"

		}
	},
	{
		9,
		"ipc",
		{
			"associate",
			"create",
			"write",
			"unix_read",
			"destroy",
			"getattr",
			"setattr",
			"read",
			"unix_write"

		}	
	}
};
#endif
